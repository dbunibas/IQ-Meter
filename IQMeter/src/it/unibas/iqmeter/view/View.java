/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package it.unibas.iqmeter.view;

import it.unibas.iqmeter.Constant;
import it.unibas.iqmeter.Utils;
import it.unibas.iqmeter.controller.ActionChangeTab;
import it.unibas.iqmeter.controller.ActionDeleteExecution;
import it.unibas.iqmeter.controller.ActionShowAddTool;
import it.unibas.iqmeter.controller.ActionExplainQuality;
import it.unibas.iqmeter.controller.ActionExportChart;
import it.unibas.iqmeter.controller.ActionExportImageChart;
import it.unibas.iqmeter.controller.wizard.ActionNewProject;
import it.unibas.iqmeter.controller.ActionOpenFolder;
import it.unibas.iqmeter.controller.ActionOpenProject;
import it.unibas.iqmeter.controller.ActionReloadProject;
import it.unibas.iqmeter.controller.ActionManualRun;
import it.unibas.iqmeter.controller.ActionRecord;
import it.unibas.iqmeter.controller.ActionShowEffortGraph;
import it.unibas.iqmeter.controller.ActionSwitchChart;
import it.unibas.iqmeter.model.MappingTool;
import it.unibas.iqmeter.model.Scenario;
import it.unibas.ping.azioni.AzioneEsci;
import it.unibas.ping.azioni.AzioneInformazioniApplicazione;
import it.unibas.ping.azioni.ChangeListenerGenerico;
import it.unibas.ping.binding.osservatori.OsservatoreLabel;
import it.unibas.ping.framework.Controllo;
import it.unibas.ping.framework.FramePing;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Image;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JToggleButton;
import javax.swing.KeyStroke;
import javax.swing.UIManager;

/**
 *
 * @author antonio
 */
public class View extends FramePing {

    static {
        setDefaultLookAndFeelDecorated(true);
        setlookAndFeel();
    }

    private static void setlookAndFeel() {
        try {
            String lookAndFeelname = UIManager.getSystemLookAndFeelClassName();
            UIManager.setLookAndFeel(lookAndFeelname);
        } catch (Exception ex) {
            System.out.println("Error loading look and feel");
        }
    }
    private JLabel labelProjectName = new JLabel();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolBar = new javax.swing.JToolBar();
        buttonNew = new javax.swing.JButton();
        buttonOpen = new javax.swing.JButton();
        buttonExplainQuality = new javax.swing.JButton();
        buttonGraph = new javax.swing.JButton();
        buttonExport = new javax.swing.JButton();
        toggleButtonRecord = new javax.swing.JToggleButton();
        scrollPaneCentral = new javax.swing.JScrollPane();
        panelCentral = new javax.swing.JPanel();
        scrollPaneView = new javax.swing.JScrollPane();
        panelTab = new javax.swing.JPanel();
        panelSouth = new javax.swing.JPanel();
        panelContainerChart = new javax.swing.JTabbedPane();
        panelStatus = new javax.swing.JPanel();
        labelIconStatus = new javax.swing.JLabel();
        labelStatus = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        menuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuItemNew = new javax.swing.JMenuItem();
        menuItemOpen = new javax.swing.JMenuItem();
        separator = new javax.swing.JPopupMenu.Separator();
        menuItemExit = new javax.swing.JMenuItem();
        menuProject = new javax.swing.JMenu();
        itemRun = new javax.swing.JMenuItem();
        itemReload = new javax.swing.JMenuItem();
        itemExport = new javax.swing.JMenuItem();
        itemOutputFolder = new javax.swing.JMenuItem();
        itemAddTool = new javax.swing.JMenuItem();
        separator1 = new javax.swing.JPopupMenu.Separator();
        itemGraph = new javax.swing.JMenuItem();
        itemQuality = new javax.swing.JMenuItem();
        itemDelete = new javax.swing.JMenuItem();
        separator2 = new javax.swing.JPopupMenu.Separator();
        itemSwitchChart = new javax.swing.JMenuItem();
        itemExportPNG = new javax.swing.JMenuItem();
        menuInfo = new javax.swing.JMenu();
        menuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);

        toolBar.setRollover(true);
        toolBar.setFont(toolBar.getFont());

        buttonNew.setText("new");
        buttonNew.setFocusable(false);
        buttonNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonNew.setName("buttonNew"); // NOI18N
        buttonNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(buttonNew);

        buttonOpen.setText("buttonOpen");
        buttonOpen.setFocusable(false);
        buttonOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonOpen.setName("buttonOpen"); // NOI18N
        buttonOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(buttonOpen);

        buttonExplainQuality.setText("Explain");
        buttonExplainQuality.setFocusable(false);
        buttonExplainQuality.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonExplainQuality.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(buttonExplainQuality);

        buttonGraph.setText("graph");
        buttonGraph.setFocusable(false);
        buttonGraph.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonGraph.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(buttonGraph);

        buttonExport.setText("export");
        buttonExport.setFocusable(false);
        buttonExport.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonExport.setName("buttonExport"); // NOI18N
        buttonExport.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportActionPerformed(evt);
            }
        });
        toolBar.add(buttonExport);

        toggleButtonRecord.setText("record");
        toggleButtonRecord.setFocusable(false);
        toggleButtonRecord.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toggleButtonRecord.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(toggleButtonRecord);

        getContentPane().add(toolBar, java.awt.BorderLayout.PAGE_START);

        scrollPaneCentral.setPreferredSize(new java.awt.Dimension(500, 324));

        panelCentral.setFont(panelCentral.getFont());
        panelCentral.setLayout(new javax.swing.BoxLayout(panelCentral, javax.swing.BoxLayout.Y_AXIS));

        panelTab.setLayout(new java.awt.BorderLayout());
        scrollPaneView.setViewportView(panelTab);

        panelCentral.add(scrollPaneView);

        panelSouth.setName("panelSouth"); // NOI18N
        panelSouth.setPreferredSize(new java.awt.Dimension(400, 320));

        panelContainerChart.setName("panelContainerChart"); // NOI18N

        javax.swing.GroupLayout panelSouthLayout = new javax.swing.GroupLayout(panelSouth);
        panelSouth.setLayout(panelSouthLayout);
        panelSouthLayout.setHorizontalGroup(
            panelSouthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelContainerChart, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
        );
        panelSouthLayout.setVerticalGroup(
            panelSouthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelContainerChart, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
        );

        panelCentral.add(panelSouth);
        panelSouth.getAccessibleContext().setAccessibleName("");

        scrollPaneCentral.setViewportView(panelCentral);

        getContentPane().add(scrollPaneCentral, java.awt.BorderLayout.CENTER);

        panelStatus.setFont(panelStatus.getFont());
        panelStatus.setName(""); // NOI18N
        panelStatus.setPreferredSize(new java.awt.Dimension(10, 31));

        labelIconStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelIconStatus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        labelIconStatus.setIconTextGap(1);
        labelIconStatus.setName("labelIconStatus"); // NOI18N
        labelIconStatus.setPreferredSize(new java.awt.Dimension(20, 16));

        labelStatus.setName("labelStatus"); // NOI18N

        progressBar.setFont(progressBar.getFont());
        progressBar.setName("progressBar"); // NOI18N
        progressBar.setPreferredSize(new java.awt.Dimension(10, 20));

        javax.swing.GroupLayout panelStatusLayout = new javax.swing.GroupLayout(panelStatus);
        panelStatus.setLayout(panelStatusLayout);
        panelStatusLayout.setHorizontalGroup(
            panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStatusLayout.createSequentialGroup()
                .addComponent(labelIconStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 313, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelStatusLayout.setVerticalGroup(
            panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStatusLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelIconStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        labelIconStatus.getAccessibleContext().setAccessibleDescription("");

        getContentPane().add(panelStatus, java.awt.BorderLayout.SOUTH);

        menuBar.setFont(menuBar.getFont());

        menuFile.setMnemonic('f');
        menuFile.setText("File");
        menuFile.setFont(menuFile.getFont());

        menuItemNew.setFont(menuItemNew.getFont());
        menuItemNew.setText("New");
        menuItemNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemNewActionPerformed(evt);
            }
        });
        menuFile.add(menuItemNew);

        menuItemOpen.setFont(menuItemOpen.getFont());
        menuItemOpen.setText("Open");
        menuFile.add(menuItemOpen);
        menuFile.add(separator);

        menuItemExit.setFont(menuItemExit.getFont());
        menuItemExit.setMnemonic('x');
        menuItemExit.setText("Exit");
        menuFile.add(menuItemExit);

        menuBar.add(menuFile);

        menuProject.setMnemonic('p');
        menuProject.setText("Project");

        itemRun.setFont(itemRun.getFont());
        itemRun.setText("Run");
        menuProject.add(itemRun);

        itemReload.setFont(itemReload.getFont());
        itemReload.setText("jMenuItem1");
        menuProject.add(itemReload);

        itemExport.setFont(itemExport.getFont());
        itemExport.setText("jMenuItem1");
        menuProject.add(itemExport);

        itemOutputFolder.setFont(itemOutputFolder.getFont());
        itemOutputFolder.setText("jMenuItem1");
        menuProject.add(itemOutputFolder);

        itemAddTool.setFont(itemAddTool.getFont());
        itemAddTool.setText("jMenuItem1");
        menuProject.add(itemAddTool);
        menuProject.add(separator1);

        itemGraph.setFont(itemGraph.getFont());
        itemGraph.setText("jMenuItem1");
        menuProject.add(itemGraph);

        itemQuality.setFont(itemQuality.getFont());
        itemQuality.setText("jMenuItem1");
        menuProject.add(itemQuality);

        itemDelete.setFont(itemDelete.getFont());
        itemDelete.setText("jMenuItem1");
        menuProject.add(itemDelete);
        menuProject.add(separator2);

        itemSwitchChart.setText("jMenuItem1");
        menuProject.add(itemSwitchChart);

        itemExportPNG.setText("jMenuItem1");
        menuProject.add(itemExportPNG);

        menuBar.add(menuProject);

        menuInfo.setMnemonic('h');
        menuInfo.setText("Help");
        menuInfo.setFont(menuInfo.getFont());

        menuItemAbout.setFont(menuItemAbout.getFont());
        menuItemAbout.setText("About");
        menuInfo.add(menuItemAbout);

        menuBar.add(menuInfo);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonExportActionPerformed

    private void menuItemNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemNewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuItemNewActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonExplainQuality;
    private javax.swing.JButton buttonExport;
    private javax.swing.JButton buttonGraph;
    private javax.swing.JButton buttonNew;
    private javax.swing.JButton buttonOpen;
    private javax.swing.JMenuItem itemAddTool;
    private javax.swing.JMenuItem itemDelete;
    private javax.swing.JMenuItem itemExport;
    private javax.swing.JMenuItem itemExportPNG;
    private javax.swing.JMenuItem itemGraph;
    private javax.swing.JMenuItem itemOutputFolder;
    private javax.swing.JMenuItem itemQuality;
    private javax.swing.JMenuItem itemReload;
    private javax.swing.JMenuItem itemRun;
    private javax.swing.JMenuItem itemSwitchChart;
    private javax.swing.JLabel labelIconStatus;
    private javax.swing.JLabel labelStatus;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuInfo;
    private javax.swing.JMenuItem menuItemAbout;
    private javax.swing.JMenuItem menuItemExit;
    private javax.swing.JMenuItem menuItemNew;
    private javax.swing.JMenuItem menuItemOpen;
    private javax.swing.JMenu menuProject;
    private javax.swing.JPanel panelCentral;
    private javax.swing.JTabbedPane panelContainerChart;
    private javax.swing.JPanel panelSouth;
    private javax.swing.JPanel panelStatus;
    private javax.swing.JPanel panelTab;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JScrollPane scrollPaneCentral;
    private javax.swing.JScrollPane scrollPaneView;
    private javax.swing.JPopupMenu.Separator separator;
    private javax.swing.JPopupMenu.Separator separator1;
    private javax.swing.JPopupMenu.Separator separator2;
    private javax.swing.JToggleButton toggleButtonRecord;
    private javax.swing.JToolBar toolBar;
    // End of variables declaration//GEN-END:variables
    private JTabbedPane tabbedPaneTools = new MovableTabbedPane();

    @Override
    public void inizializza() {
        initComponents();
        Image img = Utils.createIcon("iqmeter.png").getImage();
        this.setIconImage(img);
        this.setTitle("IQ-Meter");
        progressBar.setVisible(false);
        this.setSize(600, 800);
        postInit();
        buildToolBar();
        buildMenu();
        this.tabbedPaneTools.setVisible(false);
    }

    private void buildToolBar() {

        this.buttonNew.setAction(this.controllo.getAzioneSwing(ActionNewProject.class.getName()));
        //this.buttonRun.setAction(this.controllo.getAzioneSwing(ActionRun.class.getName()));
        this.buttonOpen.setAction(this.controllo.getAzioneSwing(ActionOpenProject.class.getName()));
        this.buttonExport.setAction(this.controllo.getAzioneSwing(ActionExportChart.class.getName()));
        this.buttonGraph.setAction(this.controllo.getAzioneSwing(ActionShowEffortGraph.class.getName()));
        this.buttonExplainQuality.setAction(this.controllo.getAzioneSwing(ActionExplainQuality.class.getName()));
        this.toggleButtonRecord.setAction(this.controllo.getAzioneSwing(ActionRecord.class.getName()));

        buttonLayout(this.buttonNew, "new");
        this.buttonNew.setText("New");

        buttonLayout(this.buttonOpen, "open");
        this.buttonOpen.setText("Open");

        buttonLayout(this.buttonExport, "export");
        this.buttonExport.setText("Export");

        buttonLayout(this.buttonGraph, "graph");

        buttonLayout(this.buttonExplainQuality, "explain_quality");

        toggleButtonLayout(this.toggleButtonRecord, "record");
        this.toggleButtonRecord.setText("Record");

    }

    private void buttonLayout(JButton button, String icon) {
        button.setIcon(Utils.createIcon(icon + ".png"));
        button.setHorizontalTextPosition(11);
        button.setVerticalTextPosition((int) CENTER_ALIGNMENT);
    }

    private void toggleButtonLayout(JToggleButton button, String icon) {
        button.setIcon(Utils.createIcon(icon + ".png"));
        button.setHorizontalTextPosition(11);
        button.setVerticalTextPosition((int) CENTER_ALIGNMENT);
    }

    private void buildMenu() {
        this.menuItemNew.setAction(this.controllo.getAzioneSwing(ActionNewProject.class.getName()));
        this.menuItemExit.setAction(this.controllo.getAzioneSwing(AzioneEsci.class.getName()));
        this.menuItemOpen.setAction(this.controllo.getAzioneSwing(ActionOpenProject.class.getName()));

        //this.menuItemAbout.setAction(this.controllo.getAzioneSwing(AzioneInformazioniPing.class.getName()));
        this.menuItemAbout.setAction(this.controllo.getAzioneSwing(AzioneInformazioniApplicazione.class.getName()));
        this.itemRun.setAction(this.controllo.getAzioneSwing(ActionManualRun.class.getName()));
        this.itemReload.setAction(this.controllo.getAzioneSwing(ActionReloadProject.class.getName()));
        this.itemOutputFolder.setAction(this.controllo.getAzioneSwing(ActionOpenFolder.class.getName()));
        this.itemExport.setAction(this.controllo.getAzioneSwing(ActionExportChart.class.getName()));

        this.menuItemExit.setIcon(Utils.createIcon("16x16/exit_small.png"));
        this.menuItemExit.setAccelerator(KeyStroke.getKeyStroke("ctrl Q"));

        this.menuItemNew.setIcon(Utils.createIcon("16x16/new_small.png"));

        this.menuItemOpen.setIcon(Utils.createIcon("16x16/open_small.png"));

        this.itemRun.setIcon(Utils.createIcon("16x16/run_small.png"));

        this.itemReload.setIcon(Utils.createIcon(Constant.ICON_RELOAD_SMALL));

        this.itemExport.setIcon(Utils.createIcon("16x16/export_small.png"));
        this.itemOutputFolder.setIcon(Utils.createIcon(Constant.ICON_OPEN_FOLDER_SMALL));
        this.itemOutputFolder.setText("Open Output Folder");

        this.itemExport.setText("Export");

        this.itemAddTool.setAction(this.controllo.getAzioneSwing(ActionShowAddTool.class.getName()));
        this.itemAddTool.setIcon(Utils.createIcon(Constant.ICON_ADD_TOOL_SMALL));

        this.itemDelete.setAction(this.controllo.getAzioneSwing(ActionDeleteExecution.class.getName()));
        this.itemDelete.setIcon(Utils.createIcon(Constant.ICON_DELETE));
        this.itemGraph.setAction(this.controllo.getAzioneSwing(ActionShowEffortGraph.class.getName()));
        this.itemGraph.setIcon(Utils.createIcon(Constant.ICON_GRAPH));
        this.itemQuality.setAction(this.controllo.getAzioneSwing(ActionExplainQuality.class.getName()));
        this.itemQuality.setIcon(Utils.createIcon(Constant.ICON_EXPLAIN_QUALITY_SMALL));

        this.itemSwitchChart.setAction(this.controllo.getAzioneSwing(ActionSwitchChart.class.getName()));
        this.itemSwitchChart.setText("Show Area Chart");
        this.itemSwitchChart.setIcon(Utils.createIcon("16x16/" + Constant.AREA_CHART + ".png"));
        this.itemExportPNG.setAction(this.controllo.getAzioneSwing(ActionExportImageChart.class.getName()));
        this.itemExportPNG.setIcon(Utils.createIcon(Constant.ICON_CHART_IMAGE));

        disableTooltips(this.menuProject);
        disableTooltips(this.menuFile);

    }

    public void setItemSwithChartName(String type) {
        if (type.equals(Constant.LINE_CHART)) {
            this.itemSwitchChart.setText("Show Area Chart");
            this.itemSwitchChart.setIcon(Utils.createIcon("16x16/" + Constant.AREA_CHART + ".png"));
        } else {
            this.itemSwitchChart.setText("Show Line Chart");
            this.itemSwitchChart.setIcon(Utils.createIcon("16x16/" + Constant.LINE_CHART + ".png"));
        }
    }

    private void postInit() {
        OsservatoreLabel ossStatus = new OsservatoreLabel("labelStatus", Controllo.MESSAGGIO_STATO, Controllo.VALORE_MESSAGGIO);
        this.panelSouth.setVisible(false);
        PanelChart pChart = (PanelChart) vista.getSottoVista(PanelChart.class.getName());
        this.panelContainerChart.addTab("Effort Graph", pChart);
        PanelChartTemporal pChartTemp = (PanelChartTemporal) vista.getSottoVista(PanelChartTemporal.class.getName());
        this.panelContainerChart.addTab("Effort Graph Temp", pChartTemp);
        PanelChartClick pChart2 = (PanelChartClick) vista.getSottoVista(PanelChartClick.class.getName());
        this.panelContainerChart.addTab("Operations Recorderd", pChart2);
        PanelChartClickTemporal pChart2Temporal = (PanelChartClickTemporal) vista.getSottoVista(PanelChartClickTemporal.class.getName());
        this.panelContainerChart.addTab("Operations Recorderd Temp", pChart2Temporal);
//        this.panelContainerChart.add(pChart, BorderLayout.CENTER);
        this.panelTab.add(tabbedPaneTools, BorderLayout.CENTER);
        tabbedPaneTools.setName(Constant.TAB_PANE);
        this.tabbedPaneTools.addChangeListener(new ChangeListenerGenerico(ActionChangeTab.class.getName()));
        this.modello.putBean(Constant.RECORDING_STATE, false);
    }

    public void addTab(String toolName) {
        PanelToolMapping panel = new PanelToolMapping();
        panel.setName(toolName);
        panel.inizializza();
        this.tabbedPaneTools.add(toolName, panel);
    }

    public void buildTabPane() {
        this.tabbedPaneTools.removeAll();
        Scenario sc = (Scenario) this.modello.getBean(Scenario.class.getName());
        for (MappingTool tool : sc.getToolsList()) {
            this.addTab(tool.getName());
        }
        this.validate();
    }

    public void removeAllTab() {
        this.tabbedPaneTools.removeAll();
        this.tabbedPaneTools.setSelectedIndex(-1);
    }

    public int showDialogConfirm(String message, String title) {
        return JOptionPane.showConfirmDialog(this, message, title, 0);
    }

    private void disableTooltips(JMenu menu) {
        Component[] comp = menu.getMenuComponents();
        for (Component component : comp) {
            if (component instanceof JMenuItem) {
                ((JMenuItem) component).setToolTipText(null);
            }
        }
    }
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package it.unibas.iqmeter.view;

import it.unibas.iqmeter.Constant;
import it.unibas.iqmeter.Utils;
import it.unibas.iqmeter.controller.ActionOpenDocument;
import it.unibas.iqmeter.model.MappingExecution;
import it.unibas.iqmeter.model.MappingTool;
import it.unibas.ping.framework.FramePing;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import static javax.swing.JFrame.setDefaultLookAndFeelDecorated;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.UIManager;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/**
 *
 * @author Antonio Genovese
 */
public class DialogExplainQuality extends FramePing {

    private Log logger = LogFactory.getLog(this.getClass());

    static {
        setDefaultLookAndFeelDecorated(true);
        setlookAndFeel();
    }

    private static void setlookAndFeel() {
        try {
            String lookAndFeelname = UIManager.getSystemLookAndFeelClassName();
            UIManager.setLookAndFeel(lookAndFeelname);
        } catch (Exception ex) {
            System.out.println("Error loading look and feel");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCentral = new javax.swing.JPanel();
        scrollArea = new javax.swing.JScrollPane();
        textAreaQuality = new javax.swing.JTextArea();
        labelIMG = new javax.swing.JLabel();
        labelTitle = new javax.swing.JLabel();
        buttonOpen = new javax.swing.JButton();
        buttonClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelCentral.setFont(panelCentral.getFont());
        panelCentral.setPreferredSize(new java.awt.Dimension(300, 100));

        textAreaQuality.setColumns(1);
        textAreaQuality.setEditable(false);
        textAreaQuality.setFont(textAreaQuality.getFont());
        textAreaQuality.setRows(5);
        scrollArea.setViewportView(textAreaQuality);

        labelIMG.setMaximumSize(new java.awt.Dimension(24, 24));
        labelIMG.setMinimumSize(new java.awt.Dimension(24, 24));
        labelIMG.setPreferredSize(new java.awt.Dimension(24, 24));

        labelTitle.setFont(labelTitle.getFont());
        labelTitle.setText("LabelTitle");

        buttonOpen.setFont(buttonOpen.getFont());
        buttonOpen.setText("Open");
        buttonOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOpenActionPerformed(evt);
            }
        });

        buttonClose.setFont(buttonClose.getFont());
        buttonClose.setText("Close");
        buttonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCentralLayout = new javax.swing.GroupLayout(panelCentral);
        panelCentral.setLayout(panelCentralLayout);
        panelCentralLayout.setHorizontalGroup(
            panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCentralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollArea, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCentralLayout.createSequentialGroup()
                        .addComponent(buttonOpen)
                        .addGap(18, 18, 18)
                        .addComponent(buttonClose))
                    .addGroup(panelCentralLayout.createSequentialGroup()
                        .addComponent(labelIMG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelTitle)
                        .addGap(0, 305, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelCentralLayout.setVerticalGroup(
            panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCentralLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelIMG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollArea, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOpen)
                    .addComponent(buttonClose))
                .addContainerGap())
        );

        getContentPane().add(panelCentral, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOpenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonOpenActionPerformed

    private void buttonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCloseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonCloseActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonClose;
    private javax.swing.JButton buttonOpen;
    private javax.swing.JLabel labelIMG;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JPanel panelCentral;
    private javax.swing.JScrollPane scrollArea;
    private javax.swing.JTextArea textAreaQuality;
    // End of variables declaration//GEN-END:variables

    @Override
    public void inizializza() {
        initComponents();
        postInit();
        JScrollPane pane = new JScrollPane(this.panelCentral);
        Image img = Utils.createIcon("explain_quality.png").getImage();
        this.setIconImage(img);
        this.getContentPane().add(pane);
        this.setLocationRelativeTo(this.vista.getFramePrincipale());
        this.setTitle("Explain Quality");
        this.setSize(800,600);
    }

    private void close() {
        this.setVisible(false);
    }

    private void postInit() {
        this.buttonClose.setAction(new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                close();
            }
        });
        this.buttonClose.setText("Close");
        this.buttonClose.setMnemonic(new Integer(KeyEvent.VK_C));
        this.buttonClose.setToolTipText("Close");
        this.buttonOpen.setAction(controllo.getAzioneSwing(ActionOpenDocument.class.getName()));
    }

    public void setTextQuality() {
        this.textAreaQuality.setText("");
        MappingExecution execution = (MappingExecution) modello.getBean(Constant.EXECUTION_SELECTED);
        JPanel panelTool = (JPanel) modello.getBean(Constant.TAB_SELECTED);
        String text = (String) modello.getBean(execution.getNumberLabel() + Constant.QUALITY_TEXT);
        this.setName(execution.getNumberLabel() + Constant.QUALITY_TEXT);
        this.textAreaQuality.setText(text);
        this.textAreaQuality.setAlignmentX(CENTER_ALIGNMENT);
        this.textAreaQuality.setEditable(false);
        this.textAreaQuality.setCaretPosition(0);
        this.textAreaQuality.setAlignmentX(CENTER_ALIGNMENT);
        this.labelIMG.setIcon(Utils.createIcon("explain_quality.png"));
        this.labelTitle.setText("Quality Details for the Execution #" + execution.getNumberLabel() + " of " + panelTool.getName());
        this.setLocationRelativeTo(this.vista.getFramePrincipale());
        this.setSize(800,600);
    }

}
